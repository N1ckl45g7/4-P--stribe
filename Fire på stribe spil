#Fire på stribe spil kode

def brik_placering(board_state, col): #Tjekker hvilken position brikken skal placeres i
    col_list = [row[col] for row in board_state] #Laver den valgte kollone til en liste
    count = 0 #Tæller
    for i in col_list: #Loop'er igennem hver 'felt' i den valgte kollone
        if i == 0: #Tjekker hvornår pladsen er tom
            return count #Returnerer den første tomme plads' position
        count = count + 1

def check_for_win (board_state, player_id): #Tjekker om den aktuelle spiller har vundet
    brikker_på_stribe = 0
    for row in range(len(board_state)): #Vandret win-condition
        for col in range(len(board_state[0])):
            if board_state[row][col] == player_id:
                brikker_på_stribe = brikker_på_stribe + 1 #Tæller hvor mange brikker er på stribe
            elif brikker_på_stribe >= 4:
                return True #Returnerer True, hvis der er fire på stribe
            else:
                brikker_på_stribe = 0 #Hvis der er en tom plads, så sæt tælleren til nul og fortsæt

    for col in range(len(board_state[0])): #Lodret win-condition
        for row in range(len(board_state)):
            if board_state[row][col] == player_id:
                brikker_på_stribe = brikker_på_stribe + 1
            elif brikker_på_stribe >= 4:
                return True
            else:
                brikker_på_stribe = 0

    for row in range(len(board_state)): #Skrå win-condition
        for col in range(len(board_state[0])):
            if board_state[row][col] == player_id: #Hvis feltet er spillerens
                #Skråt op til højre
                if row + 3 < len(board_state) and col + 3 < len(board_state[0]): #Tjekker om 4 på stribe er muligt i feltet
                    if board_state[row][col] == player_id and board_state[row + 1][col + 1] == player_id and board_state[row + 2][col + 2] == player_id and board_state[row + 3][col + 3] == player_id:
                        return True 

                #Skråt op til venstre
                if row - 3 >= 0 and col + 3 < len(board_state[0]):
                    if board_state[row][col] == player_id and board_state[row - 1][col + 1] == player_id and board_state[row - 2][col + 2] == player_id and board_state[row - 3][col + 3] == player_id:
                        return True 

def game_loop(): #Main Gameloop
    board_state = [[0,0,0,0,0,0,0],
                   [0,0,0,0,0,0,0],
                   [0,0,0,0,0,0,0],
                   [0,0,0,0,0,0,0],
                   [0,0,0,0,0,0,0],
                   [0,0,0,0,0,0,0]]
    player_id = 1 #Spillerens tur
    for row in reversed(range(len(board_state))): #Printer det tomme board til at starte med
        print(board_state[row])
    print(f"Vælg hvilken kollone du vil spille i (1-{len(board_state[0])})") #Startbesked
    while True: #Loop for hver tur
        try:
            user_inp = int(input(f"Spiller {player_id}: ")) - 1
        except ValueError: #Fejlbesked, hvis userinputtet ikke er en integer
            print("Fejl! Indtast et gyldigt input (1-6).")
            continue

        if not user_inp in range(len(board_state[0])): #Fejlbesked, hvis userinputtet ikke er inden for brættet
            print("Fejl! Vælg en kollone inden for spillebrættet.")
            continue

        if not brik_placering(board_state, user_inp) in range(len(board_state)): #Fejlbesked, hvis den valgte kollone er fyldt
            print("Fejl! Kollone er fyldt, prøv igen!")
            continue

        board_state[brik_placering(board_state, user_inp)][user_inp] = player_id #Placerer brikken i spillerens valgte kollone

        for row in reversed(range(len(board_state))): #Printer boardstate, med den første række nederst
            print(board_state[row])

        if check_for_win(board_state, player_id) == True: #Tjekker om spilleren har vundet
            print(f"Spiller {player_id} har vundet!")
            break #Når spilleren har vundet, så stop loop'et

        if all(cell != 0 for cell in board_state[len(board_state) - 1]): #Uafgjort, hvis hele brættet er fyldt
            print("Uafgjort!")
            break #Når spillet ender uafgjort, så stop loop'et

        if player_id == 1: #Skifter turen mellem spillerne
            player_id = 2
        else:
            player_id = 1

game_loop() #Starter spillet